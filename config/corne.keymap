
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |    Q    |    W    |    E    |    R    |    T    |         |    Y    |    U    |    I    |    O    |    P    |
// |    A    |    S    |    D    |    F    |    G    |         |    H    |    J    |    K    |    L    |    ;    |
// |    Z    |    X    |    C    |    V    |    B    |         |    N    |    M    |    ,    |    .    |    /    |
//                     |   WIN   |   LWR   |   SPC   |         |   ENT   |   RSE   |   LCTRL |
                        bindings = <
   &kp Q     &kp W     &kp E     &kp R     &kp T               &kp Y     &kp U     &kp I     &kp O     &kp P
   &kp A     &kp S     &kp D     &kp F     &kp G               &kp H     &kp J     &kp K     &kp L     &kp SEMI
   &kp Z     &kp X     &kp C     &kp V     &kp B               &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
                       &kp LGUI  &sl 1     &kp SPACE           &kp RET   &sl 2     &kp LCTRL
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |    1    |    2     |    3    |    4    |    5    |         |   6     |   7     |   8     |   9     |   0     |
// |   ALT   | SHIFT    |  TAB    |   ESC   |   BSPC  |         |  LEFT   |  DOWN   |   UP    |  RIGHT  |         |
// |         | CAPS     |         |         |   DEL   |         |         |         |         |         |         |
//                      |         |         |         |         |         |         |         |
                        bindings = <
   &kp N1    &kp N2     &kp N3    &kp N4    &kp N5              &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
   &kp trans &kp trans  &kp trans &kp trans &kp trans           &kp trans &kp trans &kp trans &kp trans &kp trans
   &kp trans &kp CAPS   &kp trans &kp trans &kp DEL             &kp trans &kp trans &kp trans &kp trans &kp trans
                        &kp trans &kp trans &kp trans           &kp trans &kp trans &kp trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |    !    |    @    |    #    |    $    |    %    |         |    ^    |    &    |    *    |    `    |         |
// |    ~    |    <    |    (    |    {    |    [    |         |    '    |    =    |    -    |    |    |         |
// |    \    |    >    |    )    |    }    |    ]    |         |    "    |    +    |    _    |         |    /    |
//                     |         |         |         |         |         |         |         |
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp GRAVE &kp trans
   &kp TILDE &kp LT    &kp LPAR  &kp LBRC  &kp LBKT            &kp SQT   &kp EQUAL &kp MINUS       &kp PIPE  &kp trans
   &kp BSLH  &kp GT    &kp RPAR  &kp RBRC  &kp RBKT            &kp DQT   &kp PLUS  &kp UNDER       &kp trans &kp SLASH
                       &kp trans &kp trans &kp trans           &kp trans &kp trans &kp trans
                        >;
                };
        };
};


